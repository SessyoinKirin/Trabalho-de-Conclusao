{"version":3,"sources":["index.ts"],"names":["NativeModules","Platform","customOpenDatabase","SQLiteDatabase","process","nextTick","callback","setTimeout","LINKING_ERROR","select","ios","default","Sqlite2","RNSqlite2","Proxy","get","Error","multiply","a","b","openDB","SQLitePlugin","openDatabase","name","version","description","size","undefined"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAsC,cAAtC,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,IAAI,CAACC,OAAO,CAACC,QAAb,EAAuB;AACrBD,EAAAA,OAAO,CAACC,QAAR,GAAmB,UAAUC,QAAV,EAAgC;AACjDC,IAAAA,UAAU,CAACD,QAAD,EAAW,CAAX,CAAV;AACD,GAFD;AAGD;;AAED,MAAME,aAAa,GAChB,gFAAD,GACAP,QAAQ,CAACQ,MAAT,CAAgB;AAACC,EAAAA,GAAG,EAAE,gCAAN;AAAwCC,EAAAA,OAAO,EAAE;AAAjD,CAAhB,CADA,GAEA,sDAFA,GAGA,6CAJF;AAMA,MAAMC,OAAO,GAAGZ,aAAa,CAACa,SAAd,GACZb,aAAa,CAACa,SADF,GAEZ,IAAIC,KAAJ,CACE,EADF,EAEE;AACEC,EAAAA,GAAG,GAAG;AACJ,UAAM,IAAIC,KAAJ,CAAUR,aAAV,CAAN;AACD;;AAHH,CAFF,CAFJ;AAWA,OAAO,SAASS,QAAT,CAAkBC,CAAlB,EAA6BC,CAA7B,EAAyD;AAC9D,SAAOP,OAAO,CAACK,QAAR,CAAiBC,CAAjB,EAAoBC,CAApB,CAAP;AACD;AAED,IAAIC,MAAM,GAAGlB,kBAAkB,CAACC,cAAD,CAA/B;;AAEA,MAAMkB,YAAN,CAAmB;AAkBjBC,EAAAA,YAAY,CACVC,IADU,EASVC,OATU,EAUVC,WAVU,EAWVC,IAXU,EAYVpB,QAZU,EAaM;AAChB,QAAIiB,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AACpC;AACAjB,MAAAA,QAAQ,GAAG,OAAOkB,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CG,SAArD;AACAD,MAAAA,IAAI,GAAGH,IAAI,CAACG,IAAZ;AACAD,MAAAA,WAAW,GAAGF,IAAI,CAACE,WAAnB;AACAD,MAAAA,OAAO,GAAGD,IAAI,CAACC,OAAf;AACAD,MAAAA,IAAI,GAAGA,IAAI,CAACA,IAAZ;AACD;;AACD,QAAI,CAACG,IAAL,EAAW;AACTA,MAAAA,IAAI,GAAG,CAAP;AACD;;AACD,QAAI,CAACD,WAAL,EAAkB;AAChBA,MAAAA,WAAW,GAAGF,IAAd;AACD;;AACD,QAAI,CAACC,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,KAAV;AACD;;AACD,QAAI,OAAOD,IAAP,KAAgB,WAApB,EAAiC;AAC/B,YAAM,IAAIP,KAAJ,CAAU,mDAAV,CAAN;AACD;;AACD,WAAOI,MAAM,CAACG,IAAD,EAAOC,OAAP,EAAgBC,WAAhB,EAA6BC,IAA7B,EAAmCpB,QAAnC,CAAb;AACD;;AArDgB;;AAwDnB,eAAe,IAAIe,YAAJ,EAAf;AACA,cAAc,kBAAd","sourcesContent":["import {NativeModules, Platform} from 'react-native'\n// @ts-ignore\nimport customOpenDatabase from 'websql/custom'\nimport SQLiteDatabase from './SQLiteDatabase'\nimport type {WebsqlDatabase, WebsqlDatabaseCallback} from './WebsqlDatabase'\n\nif (!process.nextTick) {\n  process.nextTick = function (callback: () => void) {\n    setTimeout(callback, 0)\n  }\n}\n\nconst LINKING_ERROR =\n  `The package 'react-native-sqlite-2' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ios: \"- You have run 'pod install'\\n\", default: ''}) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n'\n\nconst Sqlite2 = NativeModules.RNSqlite2\n  ? NativeModules.RNSqlite2\n  : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR)\n        },\n      }\n    )\n\nexport function multiply(a: number, b: number): Promise<number> {\n  return Sqlite2.multiply(a, b)\n}\n\nlet openDB = customOpenDatabase(SQLiteDatabase)\n\nclass SQLitePlugin {\n  openDatabase(\n    args: {\n      name: string\n      version: string\n      description: string\n      size: number\n    },\n    callback: WebsqlDatabaseCallback\n  ): WebsqlDatabase\n  openDatabase(\n    name: string,\n    version?: string,\n    description?: string,\n    size?: number,\n    callback?: WebsqlDatabaseCallback\n  ): WebsqlDatabase\n\n  openDatabase(\n    name:\n      | string\n      | {\n          name: string\n          version: string\n          description: string\n          size: number\n        },\n    version?: string | WebsqlDatabaseCallback,\n    description?: string,\n    size?: number,\n    callback?: WebsqlDatabaseCallback\n  ): WebsqlDatabase {\n    if (name && typeof name === 'object') {\n      // accept SQLite Plugin 1-style object here\n      callback = typeof version === 'function' ? version : undefined\n      size = name.size\n      description = name.description\n      version = name.version\n      name = name.name\n    }\n    if (!size) {\n      size = 1\n    }\n    if (!description) {\n      description = name\n    }\n    if (!version) {\n      version = '1.0'\n    }\n    if (typeof name === 'undefined') {\n      throw new Error('please be sure to call: openDatabase(\"myname.db\")')\n    }\n    return openDB(name, version, description, size, callback)\n  }\n}\n\nexport default new SQLitePlugin()\nexport * from './WebsqlDatabase'\n"]}