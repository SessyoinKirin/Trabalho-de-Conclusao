{"ast":null,"code":"import * as React from 'react';\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nexport default function useOnRouteFocus(_ref) {\n  var router = _ref.router,\n    getState = _ref.getState,\n    sourceRouteKey = _ref.key,\n    setState = _ref.setState;\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n    onRouteFocusParent = _React$useContext.onRouteFocus;\n  return React.useCallback(function (key) {\n    var state = getState();\n    var result = router.getStateForRouteFocus(state, key);\n    if (result !== state) {\n      setState(result);\n    }\n    if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n      onRouteFocusParent(sourceRouteKey);\n    }\n  }, [getState, onRouteFocusParent, router, setState, sourceRouteKey]);\n}","map":{"version":3,"mappings":"AAKA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,wBAAwB;AAc/B,eAAe,SAASC,eAAe,OAKnB;EAAA,IAJlBC,MAAM,GAIUC,KAJhBD,MAAM;IACNE,QAAQ,GAGQD,KAHhBC,QAAQ;IACHC,cAAc,GAEHF,KAFhBG,GAAG;IACHC,WACgBJ,KADhBI;EAEA,wBAA6CR,KAAK,CAACS,UAAU,CAC3DR,wBAAwB,CACzB;IAFqBS,uCAAdC,YAAY;EAIpB,OAAOX,KAAK,CAACY,WAAW,CACrBL,aAAW,EAAK;IACf,IAAMM,KAAK,GAAGR,QAAQ,EAAE;IACxB,IAAMS,MAAM,GAAGX,MAAM,CAACY,qBAAqB,CAACF,KAAK,EAAEN,GAAG,CAAC;IAEvD,IAAIO,MAAM,KAAKD,KAAK,EAAE;MACpBL,QAAQ,CAACM,MAAM,CAAC;IAClB;IAEA,IAAIJ,kBAAkB,KAAKM,SAAS,IAAIV,cAAc,KAAKU,SAAS,EAAE;MACpEN,kBAAkB,CAACJ,cAAc,CAAC;IACpC;EACF,CAAC,EACD,CAACD,QAAQ,EAAEK,kBAAkB,EAAEP,MAAM,EAAEK,QAAQ,EAAEF,cAAc,CAAC,CACjE;AACH","names":["React","NavigationBuilderContext","useOnRouteFocus","router","_ref","getState","sourceRouteKey","key","setState","useContext","onRouteFocusParent","onRouteFocus","useCallback","state","result","getStateForRouteFocus","undefined"],"sources":["D:\\6Semestre\\TrabalhoDeConclusao\\node_modules\\@react-navigation\\core\\src\\useOnRouteFocus.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\n\ntype Options<Action extends NavigationAction> = {\n  router: Router<NavigationState, Action>;\n  getState: () => NavigationState;\n  setState: (state: NavigationState) => void;\n  key?: string;\n};\n\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\nexport default function useOnRouteFocus<Action extends NavigationAction>({\n  router,\n  getState,\n  key: sourceRouteKey,\n  setState,\n}: Options<Action>) {\n  const { onRouteFocus: onRouteFocusParent } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  return React.useCallback(\n    (key: string) => {\n      const state = getState();\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (result !== state) {\n        setState(result);\n      }\n\n      if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n        onRouteFocusParent(sourceRouteKey);\n      }\n    },\n    [getState, onRouteFocusParent, router, setState, sourceRouteKey]\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}