{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport deepmerge from 'deepmerge';\nimport colors from \"./colors\";\nimport darkColors from \"./colorsDark\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ThemeContext = React.createContext({\n  theme: {\n    colors: colors\n  }\n});\nvar ThemeProvider = function (_React$Component) {\n  _inherits(ThemeProvider, _React$Component);\n  var _super = _createSuper(ThemeProvider);\n  function ThemeProvider(props) {\n    var _this;\n    _classCallCheck(this, ThemeProvider);\n    _this = _super.call(this, props);\n    _this.updateTheme = function (updates) {\n      _this.setState(function (_ref) {\n        var theme = _ref.theme;\n        return {\n          theme: deepmerge(theme, updates)\n        };\n      });\n    };\n    _this.replaceTheme = function (theme) {\n      _this.setState(function () {\n        return {\n          theme: deepmerge(_this.defaultTheme, theme)\n        };\n      });\n    };\n    _this.getTheme = function () {\n      return _this.state.theme;\n    };\n    var defaultColors = props.useDark ? darkColors : colors;\n    _this.defaultTheme = deepmerge({\n      colors: defaultColors\n    }, props.theme);\n    _this.state = {\n      theme: _this.defaultTheme,\n      useDark: Boolean(props.useDark)\n    };\n    return _this;\n  }\n  _createClass(ThemeProvider, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(ThemeContext.Provider, {\n        value: {\n          theme: this.state.theme,\n          updateTheme: this.updateTheme,\n          replaceTheme: this.replaceTheme\n        },\n        children: this.props.children\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var useDark = props.useDark;\n      var isTheme = function isTheme(theme) {\n        return !(Object.keys(theme).length === 0 && theme.constructor === Object);\n      };\n      if (useDark !== state.useDark || isTheme(props.theme) && props.theme !== state.theme) {\n        var defaultColors = useDark ? darkColors : colors;\n        return {\n          theme: deepmerge(state.theme, deepmerge({\n            colors: defaultColors\n          }, props.theme)),\n          useDark: useDark\n        };\n      }\n      return null;\n    }\n  }]);\n  return ThemeProvider;\n}(React.Component);\nexport { ThemeProvider as default };\nThemeProvider.defaultProps = {\n  theme: {},\n  useDark: false\n};\nexport var ThemeConsumer = ThemeContext.Consumer;","map":{"version":3,"names":["React","deepmerge","colors","darkColors","ThemeContext","createContext","theme","ThemeProvider","props","updateTheme","updates","setState","replaceTheme","defaultTheme","getTheme","state","defaultColors","useDark","Boolean","children","isTheme","Object","keys","length","constructor","Component","defaultProps","ThemeConsumer","Consumer"],"sources":["D:/6Semestre/TrabalhoDeConclusao/node_modules/react-native-elements/dist/config/ThemeProvider.js"],"sourcesContent":["import React from 'react';\nimport deepmerge from 'deepmerge';\nimport colors from './colors';\nimport darkColors from './colorsDark';\nexport const ThemeContext = React.createContext({\n    theme: {\n        colors,\n    },\n});\nexport default class ThemeProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateTheme = (updates) => {\n            this.setState(({ theme }) => ({\n                theme: deepmerge(theme, updates),\n            }));\n        };\n        this.replaceTheme = (theme) => {\n            this.setState(() => ({\n                theme: deepmerge(this.defaultTheme, theme),\n            }));\n        };\n        this.getTheme = () => this.state.theme;\n        const defaultColors = props.useDark ? darkColors : colors;\n        this.defaultTheme = deepmerge({\n            colors: defaultColors,\n        }, props.theme);\n        this.state = {\n            theme: this.defaultTheme,\n            useDark: Boolean(props.useDark),\n        };\n    }\n    static getDerivedStateFromProps(props, state) {\n        const { useDark } = props;\n        const isTheme = (theme) => {\n            return !(Object.keys(theme).length === 0 && theme.constructor === Object);\n        };\n        //isTheme will check if the theme is provided by user and will update the theme only if its provided by user\n        //Not checking if the theme exist or not will always result in if statement getting executed as props.theme !== state.theme if theme is not provided\n        if (useDark !== state.useDark ||\n            (isTheme(props.theme) && props.theme !== state.theme)) {\n            const defaultColors = useDark ? darkColors : colors;\n            return {\n                theme: deepmerge(state.theme, deepmerge({\n                    colors: defaultColors,\n                }, props.theme)),\n                useDark,\n            };\n        }\n        return null;\n    }\n    render() {\n        return (<ThemeContext.Provider value={{\n                theme: this.state.theme,\n                updateTheme: this.updateTheme,\n                replaceTheme: this.replaceTheme,\n            }}>\n        {this.props.children}\n      </ThemeContext.Provider>);\n    }\n}\nThemeProvider.defaultProps = {\n    theme: {},\n    useDark: false,\n};\nexport const ThemeConsumer = ThemeContext.Consumer;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,MAAM;AACb,OAAOC,UAAU;AAAqB;AACtC,OAAO,IAAMC,YAAY,GAAGJ,KAAK,CAACK,aAAa,CAAC;EAC5CC,KAAK,EAAE;IACHJ,MAAM,EAANA;EACJ;AACJ,CAAC,CAAC;AAAC,IACkBK,aAAa;EAAA;EAAA;EAC9B,uBAAYC,KAAK,EAAE;IAAA;IAAA;IACf,0BAAMA,KAAK;IACX,MAAKC,WAAW,GAAG,UAACC,OAAO,EAAK;MAC5B,MAAKC,QAAQ,CAAC;QAAA,IAAGL,KAAK,QAALA,KAAK;QAAA,OAAQ;UAC1BA,KAAK,EAAEL,SAAS,CAACK,KAAK,EAAEI,OAAO;QACnC,CAAC;MAAA,CAAC,CAAC;IACP,CAAC;IACD,MAAKE,YAAY,GAAG,UAACN,KAAK,EAAK;MAC3B,MAAKK,QAAQ,CAAC;QAAA,OAAO;UACjBL,KAAK,EAAEL,SAAS,CAAC,MAAKY,YAAY,EAAEP,KAAK;QAC7C,CAAC;MAAA,CAAC,CAAC;IACP,CAAC;IACD,MAAKQ,QAAQ,GAAG;MAAA,OAAM,MAAKC,KAAK,CAACT,KAAK;IAAA;IACtC,IAAMU,aAAa,GAAGR,KAAK,CAACS,OAAO,GAAGd,UAAU,GAAGD,MAAM;IACzD,MAAKW,YAAY,GAAGZ,SAAS,CAAC;MAC1BC,MAAM,EAAEc;IACZ,CAAC,EAAER,KAAK,CAACF,KAAK,CAAC;IACf,MAAKS,KAAK,GAAG;MACTT,KAAK,EAAE,MAAKO,YAAY;MACxBI,OAAO,EAAEC,OAAO,CAACV,KAAK,CAACS,OAAO;IAClC,CAAC;IAAC;EACN;EAAC;IAAA;IAAA,OAoBD,kBAAS;MACL,OAAQ,KAAC,YAAY,CAAC,QAAQ;QAAC,KAAK,EAAE;UAC9BX,KAAK,EAAE,IAAI,CAACS,KAAK,CAACT,KAAK;UACvBG,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BG,YAAY,EAAE,IAAI,CAACA;QACvB,CAAE;QAAA,UACL,IAAI,CAACJ,KAAK,CAACW;MAAQ,EACE;IAC1B;EAAC;IAAA;IAAA,OA3BD,kCAAgCX,KAAK,EAAEO,KAAK,EAAE;MAC1C,IAAQE,OAAO,GAAKT,KAAK,CAAjBS,OAAO;MACf,IAAMG,OAAO,GAAG,SAAVA,OAAO,CAAId,KAAK,EAAK;QACvB,OAAO,EAAEe,MAAM,CAACC,IAAI,CAAChB,KAAK,CAAC,CAACiB,MAAM,KAAK,CAAC,IAAIjB,KAAK,CAACkB,WAAW,KAAKH,MAAM,CAAC;MAC7E,CAAC;MAGD,IAAIJ,OAAO,KAAKF,KAAK,CAACE,OAAO,IACxBG,OAAO,CAACZ,KAAK,CAACF,KAAK,CAAC,IAAIE,KAAK,CAACF,KAAK,KAAKS,KAAK,CAACT,KAAM,EAAE;QACvD,IAAMU,aAAa,GAAGC,OAAO,GAAGd,UAAU,GAAGD,MAAM;QACnD,OAAO;UACHI,KAAK,EAAEL,SAAS,CAACc,KAAK,CAACT,KAAK,EAAEL,SAAS,CAAC;YACpCC,MAAM,EAAEc;UACZ,CAAC,EAAER,KAAK,CAACF,KAAK,CAAC,CAAC;UAChBW,OAAO,EAAPA;QACJ,CAAC;MACL;MACA,OAAO,IAAI;IACf;EAAC;EAAA;AAAA,EAzCsCjB,KAAK,CAACyB,SAAS;AAAA,SAArClB,aAAa;AAoDlCA,aAAa,CAACmB,YAAY,GAAG;EACzBpB,KAAK,EAAE,CAAC,CAAC;EACTW,OAAO,EAAE;AACb,CAAC;AACD,OAAO,IAAMU,aAAa,GAAGvB,YAAY,CAACwB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}