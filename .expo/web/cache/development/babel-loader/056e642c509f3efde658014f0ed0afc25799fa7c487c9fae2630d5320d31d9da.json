{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Fragment } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { withTheme } from \"../config\";\nimport { ScreenWidth, ScreenHeight, isIOS } from \"../helpers\";\nimport Triangle from \"./Triangle\";\nimport getTooltipCoordinate, { getElementVisibleWidth } from \"./getTooltipCoordinate\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: function onClose() {},\n  onOpen: function onOpen() {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n  closeOnlyOnBackdropPress: false\n};\nvar Tooltip = function (_React$Component) {\n  _inherits(Tooltip, _React$Component);\n  var _super = _createSuper(Tooltip);\n  function Tooltip() {\n    var _this;\n    _classCallCheck(this, Tooltip);\n    _this = _super.apply(this, arguments);\n    _this._isMounted = false;\n    _this.state = {\n      isVisible: false,\n      yOffset: 0,\n      xOffset: 0,\n      elementWidth: 0,\n      elementHeight: 0\n    };\n    _this.toggleTooltip = function () {\n      var onClose = _this.props.onClose;\n      _this.getElementPosition();\n      _this._isMounted && _this.setState(function (prevState) {\n        if (prevState.isVisible) {\n          onClose && onClose();\n        }\n        return {\n          isVisible: !prevState.isVisible\n        };\n      });\n    };\n    _this.wrapWithPress = function (toggleOnPress, toggleAction, children) {\n      if (toggleOnPress) {\n        return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, _defineProperty({}, toggleAction, _this.toggleTooltip)), {}, {\n          delayLongPress: 250,\n          activeOpacity: 1,\n          children: children\n        }));\n      }\n      return children;\n    };\n    _this.containerStyle = function (withOverlay, overlayColor) {\n      return {\n        backgroundColor: withOverlay ? overlayColor : 'transparent',\n        flex: 1\n      };\n    };\n    _this.getTooltipStyle = function () {\n      var _ref2;\n      var _this$state = _this.state,\n        yOffset = _this$state.yOffset,\n        xOffset = _this$state.xOffset,\n        elementHeight = _this$state.elementHeight,\n        elementWidth = _this$state.elementWidth;\n      var _this$props = _this.props,\n        height = _this$props.height,\n        backgroundColor = _this$props.backgroundColor,\n        width = _this$props.width,\n        withPointer = _this$props.withPointer,\n        containerStyle = _this$props.containerStyle;\n      var _getTooltipCoordinate = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer),\n        x = _getTooltipCoordinate.x,\n        y = _getTooltipCoordinate.y;\n      return StyleSheet.flatten([(_ref2 = {\n        position: 'absolute'\n      }, _defineProperty(_ref2, I18nManager.isRTL ? 'right' : 'left', x), _defineProperty(_ref2, \"top\", y), _defineProperty(_ref2, \"width\", width), _defineProperty(_ref2, \"height\", height), _defineProperty(_ref2, \"backgroundColor\", backgroundColor), _defineProperty(_ref2, \"display\", 'flex'), _defineProperty(_ref2, \"alignItems\", 'center'), _defineProperty(_ref2, \"justifyContent\", 'center'), _defineProperty(_ref2, \"flex\", 1), _defineProperty(_ref2, \"borderRadius\", 10), _defineProperty(_ref2, \"padding\", 10), _ref2), containerStyle]);\n    };\n    _this.renderPointer = function (tooltipY) {\n      var _this$state2 = _this.state,\n        yOffset = _this$state2.yOffset,\n        xOffset = _this$state2.xOffset,\n        elementHeight = _this$state2.elementHeight,\n        elementWidth = _this$state2.elementWidth;\n      var _this$props2 = _this.props,\n        backgroundColor = _this$props2.backgroundColor,\n        pointerColor = _this$props2.pointerColor;\n      var pastMiddleLine = yOffset > (tooltipY || 0);\n      return _jsx(View, {\n        style: _defineProperty({\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2\n        }, I18nManager.isRTL ? 'right' : 'left', xOffset + getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 - 7.5),\n        children: _jsx(Triangle, {\n          style: {\n            borderBottomColor: pointerColor || backgroundColor\n          },\n          isDown: pastMiddleLine\n        })\n      });\n    };\n    _this.getTooltipHighlightedButtonStyle = function () {\n      var _ref4;\n      var highlightColor = _this.props.highlightColor;\n      var _this$state3 = _this.state,\n        yOffset = _this$state3.yOffset,\n        xOffset = _this$state3.xOffset,\n        elementWidth = _this$state3.elementWidth,\n        elementHeight = _this$state3.elementHeight;\n      return _ref4 = {\n        position: 'absolute',\n        top: yOffset\n      }, _defineProperty(_ref4, I18nManager.isRTL ? 'right' : 'left', xOffset), _defineProperty(_ref4, \"backgroundColor\", highlightColor), _defineProperty(_ref4, \"overflow\", 'visible'), _defineProperty(_ref4, \"width\", elementWidth), _defineProperty(_ref4, \"height\", elementHeight), _ref4;\n    };\n    _this.renderTouchableHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return _jsx(TouchableOpacity, {\n        testID: \"tooltipTouchableHighlightedButton\",\n        onPress: function onPress() {\n          return _this.toggleTooltip();\n        },\n        style: TooltipHighlightedButtonStyle,\n        children: _this.props.children\n      });\n    };\n    _this.renderStaticHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return _jsx(View, {\n        style: TooltipHighlightedButtonStyle,\n        children: _this.props.children\n      });\n    };\n    _this.renderHighlightedButton = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderTouchableHighlightedButton();\n      } else {\n        return _this.renderStaticHighlightedButton();\n      }\n    };\n    _this.renderContent = function (withTooltip) {\n      var _this$props3 = _this.props,\n        popover = _this$props3.popover,\n        withPointer = _this$props3.withPointer,\n        toggleOnPress = _this$props3.toggleOnPress,\n        toggleAction = _this$props3.toggleAction;\n      if (!withTooltip) {\n        return _this.wrapWithPress(toggleOnPress, toggleAction, _this.props.children);\n      }\n      var tooltipStyle = _this.getTooltipStyle();\n      return _jsxs(View, {\n        children: [_this.renderHighlightedButton(), withPointer && _this.renderPointer(tooltipStyle.top), _jsx(View, {\n          style: tooltipStyle,\n          testID: \"tooltipPopoverContainer\",\n          children: popover\n        })]\n      });\n    };\n    _this.getElementPosition = function () {\n      var skipAndroidStatusBar = _this.props.skipAndroidStatusBar;\n      _this.renderedElement && _this.renderedElement.measure(function (_frameOffsetX, _frameOffsetY, width, height, pageOffsetX, pageOffsetY) {\n        _this._isMounted && _this.setState({\n          xOffset: pageOffsetX,\n          yOffset: isIOS || skipAndroidStatusBar ? pageOffsetY : pageOffsetY - Platform.select({\n            android: StatusBar.currentHeight,\n            ios: 20,\n            default: 0\n          }),\n          elementWidth: width,\n          elementHeight: height\n        });\n      });\n    };\n    _this.renderStaticModalContent = function () {\n      var _this$props4 = _this.props,\n        withOverlay = _this$props4.withOverlay,\n        overlayColor = _this$props4.overlayColor;\n      return _jsxs(Fragment, {\n        children: [_jsx(TouchableOpacity, {\n          style: _this.containerStyle(withOverlay, overlayColor),\n          onPress: _this.toggleTooltip,\n          activeOpacity: 1\n        }), _jsx(View, {\n          children: _this.renderContent(true)\n        })]\n      });\n    };\n    _this.renderTogglingModalContent = function () {\n      var _this$props5 = _this.props,\n        withOverlay = _this$props5.withOverlay,\n        overlayColor = _this$props5.overlayColor;\n      return _jsx(TouchableOpacity, {\n        style: _this.containerStyle(withOverlay, overlayColor),\n        onPress: _this.toggleTooltip,\n        activeOpacity: 1,\n        children: _this.renderContent(true)\n      });\n    };\n    _this.renderModalContent = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderStaticModalContent();\n      } else {\n        return _this.renderTogglingModalContent();\n      }\n    };\n    return _this;\n  }\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      requestAnimationFrame(this.getElementPosition);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isVisible = this.state.isVisible;\n      var _this$props6 = this.props,\n        onOpen = _this$props6.onOpen,\n        ModalComponent = _this$props6.ModalComponent;\n      return _jsxs(View, {\n        collapsable: false,\n        ref: function ref(e) {\n          _this2.renderedElement = e;\n        },\n        children: [this.renderContent(false), _jsx(ModalComponent, {\n          animationType: \"fade\",\n          visible: isVisible,\n          transparent: true,\n          onShow: onOpen,\n          children: this.renderModalContent()\n        })]\n      });\n    }\n  }]);\n  return Tooltip;\n}(React.Component);\nTooltip.defaultProps = defaultProps;\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');","map":{"version":3,"names":["React","Fragment","withTheme","ScreenWidth","ScreenHeight","isIOS","Triangle","getTooltipCoordinate","getElementVisibleWidth","defaultProps","withOverlay","overlayColor","highlightColor","withPointer","toggleOnPress","toggleAction","height","width","containerStyle","backgroundColor","onClose","onOpen","skipAndroidStatusBar","ModalComponent","Modal","closeOnlyOnBackdropPress","Tooltip","arguments","_isMounted","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","props","getElementPosition","setState","prevState","wrapWithPress","children","flex","getTooltipStyle","x","y","StyleSheet","flatten","position","I18nManager","isRTL","renderPointer","tooltipY","pointerColor","pastMiddleLine","top","borderBottomColor","getTooltipHighlightedButtonStyle","renderTouchableHighlightedButton","TooltipHighlightedButtonStyle","renderStaticHighlightedButton","renderHighlightedButton","renderContent","withTooltip","popover","tooltipStyle","renderedElement","measure","_frameOffsetX","_frameOffsetY","pageOffsetX","pageOffsetY","Platform","select","android","StatusBar","currentHeight","ios","default","renderStaticModalContent","renderTogglingModalContent","renderModalContent","requestAnimationFrame","e","Component"],"sources":["D:/6Semestre/TrabalhoDeConclusao/node_modules/react-native-elements/dist/tooltip/Tooltip.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { TouchableOpacity, Modal, View, StatusBar, I18nManager, StyleSheet, Platform, } from 'react-native';\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, { getElementVisibleWidth, } from './getTooltipCoordinate';\nconst defaultProps = {\n    withOverlay: true,\n    overlayColor: 'rgba(250, 250, 250, 0.70)',\n    highlightColor: 'transparent',\n    withPointer: true,\n    toggleOnPress: true,\n    toggleAction: 'onPress',\n    height: 40,\n    width: 150,\n    containerStyle: {},\n    backgroundColor: '#617080',\n    onClose: () => { },\n    onOpen: () => { },\n    skipAndroidStatusBar: false,\n    ModalComponent: Modal,\n    closeOnlyOnBackdropPress: false,\n};\nclass Tooltip extends React.Component {\n    constructor() {\n        super(...arguments);\n        this._isMounted = false;\n        this.state = {\n            isVisible: false,\n            yOffset: 0,\n            xOffset: 0,\n            elementWidth: 0,\n            elementHeight: 0,\n        };\n        this.toggleTooltip = () => {\n            const { onClose } = this.props;\n            this.getElementPosition();\n            this._isMounted &&\n                this.setState((prevState) => {\n                    if (prevState.isVisible) {\n                        onClose && onClose();\n                    }\n                    return { isVisible: !prevState.isVisible };\n                });\n        };\n        this.wrapWithPress = (toggleOnPress, toggleAction, children) => {\n            if (toggleOnPress) {\n                return (<TouchableOpacity {...{ [toggleAction]: this.toggleTooltip }} delayLongPress={250} activeOpacity={1}>\n          {children}\n        </TouchableOpacity>);\n            }\n            return children;\n        };\n        this.containerStyle = (withOverlay, overlayColor) => {\n            return {\n                backgroundColor: withOverlay ? overlayColor : 'transparent',\n                flex: 1,\n            };\n        };\n        this.getTooltipStyle = () => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { height, backgroundColor, width, withPointer, containerStyle, } = this.props;\n            const { x, y } = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer);\n            return StyleSheet.flatten([\n                {\n                    position: 'absolute',\n                    [I18nManager.isRTL ? 'right' : 'left']: x,\n                    top: y,\n                    width,\n                    height,\n                    backgroundColor,\n                    // default styles\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flex: 1,\n                    borderRadius: 10,\n                    padding: 10,\n                },\n                containerStyle,\n            ]);\n        };\n        this.renderPointer = (tooltipY) => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { backgroundColor, pointerColor } = this.props;\n            const pastMiddleLine = yOffset > (tooltipY || 0);\n            return (<View style={{\n                    position: 'absolute',\n                    top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n                    [I18nManager.isRTL ? 'right' : 'left']: xOffset +\n                        getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n                        7.5,\n                }}>\n        <Triangle style={{ borderBottomColor: pointerColor || backgroundColor }} isDown={pastMiddleLine}/>\n      </View>);\n        };\n        this.getTooltipHighlightedButtonStyle = () => {\n            const { highlightColor } = this.props;\n            const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n            return {\n                position: 'absolute',\n                top: yOffset,\n                [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n                backgroundColor: highlightColor,\n                overflow: 'visible',\n                width: elementWidth,\n                height: elementHeight,\n            };\n        };\n        this.renderTouchableHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<TouchableOpacity testID=\"tooltipTouchableHighlightedButton\" onPress={() => this.toggleTooltip()} style={TooltipHighlightedButtonStyle}>\n        {this.props.children}\n      </TouchableOpacity>);\n        };\n        this.renderStaticHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<View style={TooltipHighlightedButtonStyle}>{this.props.children}</View>);\n        };\n        this.renderHighlightedButton = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderTouchableHighlightedButton();\n            }\n            else {\n                return this.renderStaticHighlightedButton();\n            }\n        };\n        this.renderContent = (withTooltip) => {\n            const { popover, withPointer, toggleOnPress, toggleAction } = this.props;\n            if (!withTooltip) {\n                return this.wrapWithPress(toggleOnPress, toggleAction, this.props.children);\n            }\n            const tooltipStyle = this.getTooltipStyle();\n            return (<View>\n        {this.renderHighlightedButton()}\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>);\n        };\n        this.getElementPosition = () => {\n            const { skipAndroidStatusBar } = this.props;\n            this.renderedElement &&\n                this.renderedElement.measure((_frameOffsetX, _frameOffsetY, width, height, pageOffsetX, pageOffsetY) => {\n                    this._isMounted &&\n                        this.setState({\n                            xOffset: pageOffsetX,\n                            yOffset: isIOS || skipAndroidStatusBar\n                                ? pageOffsetY\n                                : pageOffsetY -\n                                    Platform.select({\n                                        android: StatusBar.currentHeight,\n                                        ios: 20,\n                                        default: 0,\n                                    }),\n                            elementWidth: width,\n                            elementHeight: height,\n                        });\n                });\n        };\n        this.renderStaticModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<Fragment>\n        <TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}/>\n        <View>{this.renderContent(true)}</View>\n      </Fragment>);\n        };\n        this.renderTogglingModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}>\n        {this.renderContent(true)}\n      </TouchableOpacity>);\n        };\n        this.renderModalContent = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderStaticModalContent();\n            }\n            else {\n                return this.renderTogglingModalContent();\n            }\n        };\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        // wait to compute onLayout values.\n        requestAnimationFrame(this.getElementPosition);\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    render() {\n        const { isVisible } = this.state;\n        const { onOpen, ModalComponent } = this.props;\n        return (<View collapsable={false} ref={(e) => {\n                this.renderedElement = e;\n            }}>\n        {this.renderContent(false)}\n        <ModalComponent animationType=\"fade\" visible={isVisible} transparent onShow={onOpen}>\n          {this.renderModalContent()}\n        </ModalComponent>\n      </View>);\n    }\n}\nTooltip.defaultProps = defaultProps;\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}