{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport customOpenDatabase from 'websql/custom';\nimport SQLiteDatabase from \"./SQLiteDatabase\";\nif (!process.nextTick) {\n  process.nextTick = function (callback) {\n    setTimeout(callback, 0);\n  };\n}\nvar LINKING_ERROR = \"The package 'react-native-sqlite-2' doesn't seem to be linked. Make sure: \\n\\n\" + Platform.select({\n  ios: \"- You have run 'pod install'\\n\",\n  default: ''\n}) + '- You rebuilt the app after installing the package\\n' + '- You are not using Expo managed workflow\\n';\nvar Sqlite2 = NativeModules.RNSqlite2 ? NativeModules.RNSqlite2 : new Proxy({}, {\n  get: function get() {\n    throw new Error(LINKING_ERROR);\n  }\n});\nexport function multiply(a, b) {\n  return Sqlite2.multiply(a, b);\n}\nvar openDB = customOpenDatabase(SQLiteDatabase);\nvar SQLitePlugin = function () {\n  function SQLitePlugin() {\n    _classCallCheck(this, SQLitePlugin);\n  }\n  _createClass(SQLitePlugin, [{\n    key: \"openDatabase\",\n    value: function openDatabase(name, version, description, size, callback) {\n      if (name && typeof name === 'object') {\n        callback = typeof version === 'function' ? version : undefined;\n        size = name.size;\n        description = name.description;\n        version = name.version;\n        name = name.name;\n      }\n      if (!size) {\n        size = 1;\n      }\n      if (!description) {\n        description = name;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      if (typeof name === 'undefined') {\n        throw new Error('please be sure to call: openDatabase(\"myname.db\")');\n      }\n      return openDB(name, version, description, size, callback);\n    }\n  }]);\n  return SQLitePlugin;\n}();\nexport default new SQLitePlugin();\nexport * from \"./WebsqlDatabase\";","map":{"version":3,"mappings":";;;;AAEA,OAAOA,kBAAP,MAA+B,eAA/B;AACA,OAAOC,cAAP;AAGA,IAAI,CAACC,OAAO,CAACC,QAAb,EAAuB;EACrBD,OAAO,CAACC,QAAR,GAAmB,UAAUC,QAAV,EAAgC;IACjDC,UAAU,CAACD,QAAD,EAAW,CAAX,CAAV;EACD,CAFD;AAGD;AAED,IAAME,aAAa,GAChB,mFACDC,QAAQ,CAACC,MAAT,CAAgB;EAACC,GAAG,EAAE,gCAAN;EAAwCC,OAAO,EAAE;AAAjD,CAAhB,CADA,GAEA,sDAFA,GAGA,6CAJF;AAMA,IAAMC,OAAO,GAAGC,aAAa,CAACC,SAAd,GACZD,aAAa,CAACC,SADF,GAEZ,IAAIC,KAAJ,CACE,EADF,EAEE;EACEC,GAAG,iBAAG;IACJ,MAAM,IAAIC,KAAJ,CAAUV,aAAV,CAAN;EACD;AAHH,CAFF,CAFJ;AAWA,OAAO,SAASW,QAAT,CAAkBC,CAAlB,EAA6BC,CAA7B,EAAyD;EAC9D,OAAOR,OAAO,CAACM,QAAR,CAAiBC,CAAjB,EAAoBC,CAApB,CAAP;AACD;AAED,IAAIC,MAAM,GAAGpB,kBAAkB,CAACC,cAAD,CAA/B;AAAA,IAEMoB,YAAN;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAkBEC,sBACEC,IADU,EASVC,OATU,EAUVC,WAVU,EAWVC,IAXU,EAYVtB,QAZU,EAaM;MAChB,IAAImB,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;QAEpCnB,QAAQ,GAAG,OAAOoB,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CG,SAArD;QACAD,IAAI,GAAGH,IAAI,CAACG,IAAZ;QACAD,WAAW,GAAGF,IAAI,CAACE,WAAnB;QACAD,OAAO,GAAGD,IAAI,CAACC,OAAf;QACAD,IAAI,GAAGA,IAAI,CAACA,IAAZ;MACD;MACD,IAAI,CAACG,IAAL,EAAW;QACTA,IAAI,GAAG,CAAP;MACD;MACD,IAAI,CAACD,WAAL,EAAkB;QAChBA,WAAW,GAAGF,IAAd;MACD;MACD,IAAI,CAACC,OAAL,EAAc;QACZA,OAAO,GAAG,KAAV;MACD;MACD,IAAI,OAAOD,IAAP,KAAgB,WAApB,EAAiC;QAC/B,MAAM,IAAIP,KAAJ,CAAU,mDAAV,CAAN;MACD;MACD,OAAOI,MAAM,CAACG,IAAD,EAAOC,OAAP,EAAgBC,WAAhB,EAA6BC,IAA7B,EAAmCtB,QAAnC,CAAb;IACD;EAAA;EAAA;AAAA;AAGH,eAAe,IAAIiB,YAAJ,EAAf;AACA","names":["customOpenDatabase","SQLiteDatabase","process","nextTick","callback","setTimeout","LINKING_ERROR","Platform","select","ios","default","Sqlite2","NativeModules","RNSqlite2","Proxy","get","Error","multiply","a","b","openDB","SQLitePlugin","openDatabase","name","version","description","size","undefined"],"sources":["D:\\6Semestre\\TrabalhoDeConclusao\\node_modules\\react-native-sqlite-2\\lib\\module\\index.ts"],"sourcesContent":["import {NativeModules, Platform} from 'react-native'\n// @ts-ignore\nimport customOpenDatabase from 'websql/custom'\nimport SQLiteDatabase from './SQLiteDatabase'\nimport type {WebsqlDatabase, WebsqlDatabaseCallback} from './WebsqlDatabase'\n\nif (!process.nextTick) {\n  process.nextTick = function (callback: () => void) {\n    setTimeout(callback, 0)\n  }\n}\n\nconst LINKING_ERROR =\n  `The package 'react-native-sqlite-2' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ios: \"- You have run 'pod install'\\n\", default: ''}) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n'\n\nconst Sqlite2 = NativeModules.RNSqlite2\n  ? NativeModules.RNSqlite2\n  : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR)\n        },\n      }\n    )\n\nexport function multiply(a: number, b: number): Promise<number> {\n  return Sqlite2.multiply(a, b)\n}\n\nlet openDB = customOpenDatabase(SQLiteDatabase)\n\nclass SQLitePlugin {\n  openDatabase(\n    args: {\n      name: string\n      version: string\n      description: string\n      size: number\n    },\n    callback: WebsqlDatabaseCallback\n  ): WebsqlDatabase\n  openDatabase(\n    name: string,\n    version?: string,\n    description?: string,\n    size?: number,\n    callback?: WebsqlDatabaseCallback\n  ): WebsqlDatabase\n\n  openDatabase(\n    name:\n      | string\n      | {\n          name: string\n          version: string\n          description: string\n          size: number\n        },\n    version?: string | WebsqlDatabaseCallback,\n    description?: string,\n    size?: number,\n    callback?: WebsqlDatabaseCallback\n  ): WebsqlDatabase {\n    if (name && typeof name === 'object') {\n      // accept SQLite Plugin 1-style object here\n      callback = typeof version === 'function' ? version : undefined\n      size = name.size\n      description = name.description\n      version = name.version\n      name = name.name\n    }\n    if (!size) {\n      size = 1\n    }\n    if (!description) {\n      description = name\n    }\n    if (!version) {\n      version = '1.0'\n    }\n    if (typeof name === 'undefined') {\n      throw new Error('please be sure to call: openDatabase(\"myname.db\")')\n    }\n    return openDB(name, version, description, size, callback)\n  }\n}\n\nexport default new SQLitePlugin()\nexport * from './WebsqlDatabase'\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}