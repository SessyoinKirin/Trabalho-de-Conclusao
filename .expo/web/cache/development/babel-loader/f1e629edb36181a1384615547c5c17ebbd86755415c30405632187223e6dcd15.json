{"ast":null,"code":"import React from 'react';\nimport getIconType from \"../helpers/getIconType\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CheckBoxIcon = function CheckBoxIcon(_ref) {\n  var checked = _ref.checked,\n    onIconPress = _ref.onIconPress,\n    onLongIconPress = _ref.onLongIconPress,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    _ref$checkedIcon = _ref.checkedIcon,\n    checkedIcon = _ref$checkedIcon === void 0 ? 'check-square-o' : _ref$checkedIcon,\n    _ref$uncheckedIcon = _ref.uncheckedIcon,\n    uncheckedIcon = _ref$uncheckedIcon === void 0 ? 'square-o' : _ref$uncheckedIcon,\n    iconType = _ref.iconType,\n    checkedColor = _ref.checkedColor,\n    _ref$uncheckedColor = _ref.uncheckedColor,\n    uncheckedColor = _ref$uncheckedColor === void 0 ? '#bfbfbf' : _ref$uncheckedColor;\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n  var VectorIcon = iconType ? getIconType(iconType) : getIconType('font-awesome');\n  return _jsx(VectorIcon, {\n    color: checked ? checkedColor : uncheckedColor,\n    name: checked ? checkedIcon : uncheckedIcon,\n    size: size || 24,\n    style: {\n      minWidth: size || 24\n    },\n    onLongPress: onLongIconPress,\n    onPress: onIconPress\n  });\n};\nexport default CheckBoxIcon;","map":{"version":3,"names":["React","getIconType","CheckBoxIcon","checked","onIconPress","onLongIconPress","size","checkedIcon","uncheckedIcon","iconType","checkedColor","uncheckedColor","isValidElement","VectorIcon","minWidth"],"sources":["D:/6Semestre/TrabalhoDeConclusao/node_modules/react-native-elements/dist/checkbox/CheckBoxIcon.js"],"sourcesContent":["import React from 'react';\nimport getIconType from '../helpers/getIconType';\nconst CheckBoxIcon = ({ checked, onIconPress, onLongIconPress, size = 24, checkedIcon = 'check-square-o', uncheckedIcon = 'square-o', iconType, checkedColor, uncheckedColor = '#bfbfbf', }) => {\n    if (checked && React.isValidElement(checkedIcon)) {\n        return checkedIcon;\n    }\n    if (!checked && React.isValidElement(uncheckedIcon)) {\n        return uncheckedIcon;\n    }\n    const VectorIcon = iconType\n        ? getIconType(iconType)\n        : getIconType('font-awesome');\n    return (<VectorIcon color={checked ? checkedColor : uncheckedColor} name={checked ? checkedIcon : uncheckedIcon} size={size || 24} style={{ minWidth: size || 24 }} onLongPress={onLongIconPress} onPress={onIconPress}/>);\n};\nexport default CheckBoxIcon;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW;AAA+B;AACjD,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAA8K;EAAA,IAAxKC,OAAO,QAAPA,OAAO;IAAEC,WAAW,QAAXA,WAAW;IAAEC,eAAe,QAAfA,eAAe;IAAA,iBAAEC,IAAI;IAAJA,IAAI,0BAAG,EAAE;IAAA,wBAAEC,WAAW;IAAXA,WAAW,iCAAG,gBAAgB;IAAA,0BAAEC,aAAa;IAAbA,aAAa,mCAAG,UAAU;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,YAAY,QAAZA,YAAY;IAAA,2BAAEC,cAAc;IAAdA,cAAc,oCAAG,SAAS;EACpL,IAAIR,OAAO,IAAIH,KAAK,CAACY,cAAc,CAACL,WAAW,CAAC,EAAE;IAC9C,OAAOA,WAAW;EACtB;EACA,IAAI,CAACJ,OAAO,IAAIH,KAAK,CAACY,cAAc,CAACJ,aAAa,CAAC,EAAE;IACjD,OAAOA,aAAa;EACxB;EACA,IAAMK,UAAU,GAAGJ,QAAQ,GACrBR,WAAW,CAACQ,QAAQ,CAAC,GACrBR,WAAW,CAAC,cAAc,CAAC;EACjC,OAAQ,KAAC,UAAU;IAAC,KAAK,EAAEE,OAAO,GAAGO,YAAY,GAAGC,cAAe;IAAC,IAAI,EAAER,OAAO,GAAGI,WAAW,GAAGC,aAAc;IAAC,IAAI,EAAEF,IAAI,IAAI,EAAG;IAAC,KAAK,EAAE;MAAEQ,QAAQ,EAAER,IAAI,IAAI;IAAG,CAAE;IAAC,WAAW,EAAED,eAAgB;IAAC,OAAO,EAAED;EAAY,EAAE;AAC7N,CAAC;AACD,eAAeF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}